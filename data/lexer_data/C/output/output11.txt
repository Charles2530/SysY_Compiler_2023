INTTK int
IDENFR fib
LPARENT (
INTTK int
IDENFR i
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
EQL ==
INTCON 1
RPARENT )
LBRACE {
RETURNTK return
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR i
EQL ==
INTCON 2
RPARENT )
LBRACE {
RETURNTK return
INTCON 2
SEMICN ;
RBRACE }
RETURNTK return
IDENFR fib
LPARENT (
IDENFR i
MINU -
INTCON 1
RPARENT )
PLUS +
IDENFR fib
LPARENT (
IDENFR i
MINU -
INTCON 2
RPARENT )
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 2
COMMA ,
IDENFR j
ASSIGN =
INTCON 5
SEMICN ;
IDENFR i
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
IDENFR j
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
CONSTTK const
INTTK int
IDENFR a
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
COMMA ,
INTCON 2
RBRACE }
SEMICN ;
IDENFR i
ASSIGN =
LPARENT (
MINU -
LPARENT (
IDENFR i
MULT *
IDENFR j
RPARENT )
MULT *
IDENFR fib
LPARENT (
INTCON 4
RPARENT )
PLUS +
INTCON 0
PLUS +
IDENFR a
LBRACK [
IDENFR fib
LPARENT (
INTCON 1
RPARENT )
RBRACK ]
MULT *
INTCON 1
MINU -
INTCON 1
DIV /
INTCON 2
RPARENT )
MULT *
INTCON 5
SEMICN ;
IDENFR j
ASSIGN =
INTCON 7
MULT *
INTCON 5923
DIV /
INTCON 56
MULT *
INTCON 56
MINU -
IDENFR fib
LPARENT (
IDENFR fib
LPARENT (
INTCON 6
RPARENT )
RPARENT )
PLUS +
LPARENT (
INTCON 1
PLUS +
INTCON 2
MINU -
LPARENT (
INTCON 89
DIV /
INTCON 2
MULT *
INTCON 36
MINU -
INTCON 53
RPARENT )
DIV /
INTCON 1
MULT *
INTCON 6
MINU -
INTCON 2
MULT *
LPARENT (
INTCON 45
MULT *
INTCON 56
DIV /
INTCON 85
MINU -
INTCON 56
PLUS +
INTCON 35
MULT *
INTCON 56
DIV /
INTCON 4
MINU -
INTCON 9
RPARENT )
RPARENT )
SEMICN ;
INTTK int
IDENFR k
ASSIGN =
PLUS +
MINU -
PLUS +
INTCON 5
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d, %d, %d\n"
COMMA ,
IDENFR i
COMMA ,
IDENFR j
COMMA ,
IDENFR k
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
