INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "21371295\n"
RPARENT )
SEMICN ;
INTTK int
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
INTCON 0
PLUS +
INTCON 1
SEMICN ;
SEMICN ;
IFTK if
LPARENT (
IDENFR i
GRE >
INTCON 0
RPARENT )
LBRACE {
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
RBRACE }
INTTK int
IDENFR a
ASSIGN =
INTCON 1
COMMA ,
IDENFR b
ASSIGN =
INTCON 2
SEMICN ;
IFTK if
LPARENT (
IDENFR a
GEQ >=
INTCON 0
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR a
GEQ >=
INTCON 0
RPARENT )
LBRACE {
RBRACE }
IFTK if
LPARENT (
NOT !
IDENFR a
RPARENT )
LBRACE {
RBRACE }
ELSETK else
LBRACE {
RBRACE }
IFTK if
LPARENT (
IDENFR b
LEQ <=
INTCON 0
RPARENT )
LBRACE {
IDENFR b
ASSIGN =
INTCON 2
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR a
EQL ==
IDENFR b
RPARENT )
LBRACE {
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR a
NEQ !=
IDENFR b
RPARENT )
LBRACE {
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR a
NEQ !=
IDENFR b
AND &&
IDENFR a
GRE >
INTCON 0
RPARENT )
LBRACE {
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR a
NEQ !=
IDENFR b
OR ||
IDENFR a
GRE >
INTCON 0
RPARENT )
LBRACE {
IDENFR i
ASSIGN =
INTCON 2
SEMICN ;
RBRACE }
IDENFR a
ASSIGN =
IDENFR a
PLUS +
INTCON 1
MINU -
INTCON 3
MULT *
INTCON 4
DIV /
INTCON 3
MOD %
INTCON 2
SEMICN ;
IDENFR a
ASSIGN =
INTCON 1
PLUS +
INTCON 1
SEMICN ;
IDENFR a
ASSIGN =
PLUS +
MINU -
PLUS +
INTCON 1
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
