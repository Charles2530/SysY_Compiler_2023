INTTK int
IDENFR __fact
LPARENT (
INTTK int
IDENFR x
COMMA ,
INTTK int
IDENFR r
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR x
LEQ <=
INTCON 1
RPARENT )
RETURNTK return
IDENFR r
SEMICN ;
ELSETK else
RETURNTK return
IDENFR __fact
LPARENT (
IDENFR x
MINU -
INTCON 1
COMMA ,
LPARENT (
IDENFR r
MULT *
IDENFR x
RPARENT )
MOD %
INTCON 19260817
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
INTTK int
IDENFR fact
LPARENT (
INTTK int
IDENFR x
RPARENT )
LBRACE {
RETURNTK return
IDENFR __fact
LPARENT (
IDENFR x
COMMA ,
INTCON 1
RPARENT )
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR x
SEMICN ;
IDENFR x
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "fact[%d] = %d\n"
COMMA ,
IDENFR x
COMMA ,
IDENFR fact
LPARENT (
IDENFR x
RPARENT )
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "fact[1] = %d\n"
COMMA ,
IDENFR fact
LPARENT (
INTCON 1
RPARENT )
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "fact[2] = %d\n"
COMMA ,
IDENFR fact
LPARENT (
INTCON 2
RPARENT )
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "fact[3] = %d\n"
COMMA ,
IDENFR fact
LPARENT (
INTCON 3
RPARENT )
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "fact[4] = %d\n"
COMMA ,
IDENFR fact
LPARENT (
INTCON 4
RPARENT )
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "fact[5] = %d\n"
COMMA ,
IDENFR fact
LPARENT (
INTCON 5
RPARENT )
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "fact[6] = %d\n"
COMMA ,
IDENFR fact
LPARENT (
INTCON 6
RPARENT )
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "fact[7] = %d\n"
COMMA ,
IDENFR fact
LPARENT (
INTCON 7
RPARENT )
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "fact[8] = %d\n"
COMMA ,
IDENFR fact
LPARENT (
INTCON 8
RPARENT )
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
