VOIDTK void
IDENFR move
LPARENT (
INTTK int
IDENFR x
COMMA ,
INTTK int
IDENFR y
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d->%d\n"
COMMA ,
IDENFR x
COMMA ,
IDENFR y
RPARENT )
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
VOIDTK void
IDENFR hanoi
LPARENT (
INTTK int
IDENFR n
COMMA ,
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
COMMA ,
INTTK int
IDENFR c
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR n
EQL ==
INTCON 1
RPARENT )
LBRACE {
IDENFR move
LPARENT (
IDENFR a
COMMA ,
IDENFR c
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
IDENFR hanoi
LPARENT (
IDENFR n
MINU -
INTCON 1
COMMA ,
IDENFR a
COMMA ,
IDENFR c
COMMA ,
IDENFR b
RPARENT )
SEMICN ;
IDENFR move
LPARENT (
IDENFR a
COMMA ,
IDENFR c
RPARENT )
SEMICN ;
IDENFR hanoi
LPARENT (
IDENFR n
MINU -
INTCON 1
COMMA ,
IDENFR b
COMMA ,
IDENFR a
COMMA ,
IDENFR c
RPARENT )
SEMICN ;
RBRACE }
RETURNTK return
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR n
ASSIGN =
INTCON 0
SEMICN ;
IDENFR n
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "21371119\n"
RPARENT )
SEMICN ;
IDENFR hanoi
LPARENT (
IDENFR n
COMMA ,
INTCON 1
COMMA ,
INTCON 2
COMMA ,
INTCON 3
RPARENT )
SEMICN ;
INTTK int
IDENFR fun1
ASSIGN =
INTCON 0
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "fun1:\n%d"
COMMA ,
IDENFR fun1
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
