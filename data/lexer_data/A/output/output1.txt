CONSTTK const
INTTK int
IDENFR ZERO
ASSIGN =
INTCON 0
COMMA ,
IDENFR ONE
ASSIGN =
INTCON 1
SEMICN ;
INTTK int
IDENFR var2
ASSIGN =
INTCON 2
COMMA ,
IDENFR var3
ASSIGN =
INTCON 3
SEMICN ;
VOIDTK void
IDENFR fun
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
LBRACE {
INTTK int
IDENFR yuming
ASSIGN =
INTCON 1
SEMICN ;
FORTK for
LPARENT (
SEMICN ;
IDENFR yuming
LSS <
INTCON 1000
SEMICN ;
RPARENT )
LBRACE {
IDENFR yuming
ASSIGN =
IDENFR yuming
MULT *
INTCON 2
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "\n%d"
COMMA ,
IDENFR yuming
RPARENT )
SEMICN ;
RBRACE }
RETURNTK return
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "21373457\n"
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR ZERO
PLUS +
IDENFR var2
EQL ==
IDENFR var3
MINU -
IDENFR ONE
AND &&
IDENFR ONE
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR ZERO
OR ||
NOT !
IDENFR ZERO
AND &&
IDENFR ONE
PLUS +
INTCON 1
PLUS +
IDENFR var2
LSS <
INTCON 0
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "ERROR!\n"
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "And success!\n"
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
IFTK if
LPARENT (
IDENFR var3
NEQ !=
INTCON 3
OR ||
IDENFR var2
MINU -
INTCON 22
EQL ==
MINU -
INTCON 20
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR ONE
MOD %
INTCON 2
PLUS +
INTCON 3
MINU -
INTCON 4
MULT *
INTCON 2
PLUS +
IDENFR var3
PLUS +
IDENFR var2
LEQ <=
INTCON 100
OR ||
IDENFR ONE
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "Or pass!\n"
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "Test1 Success!"
RPARENT )
SEMICN ;
LBRACE {
RBRACE }
IDENFR fun
LPARENT (
RPARENT )
SEMICN ;
IDENFR fun
LPARENT (
RPARENT )
SEMICN ;
IDENFR fun
LPARENT (
RPARENT )
SEMICN ;
IDENFR fun
LPARENT (
RPARENT )
SEMICN ;
IDENFR fun
LPARENT (
RPARENT )
SEMICN ;
IDENFR fun
LPARENT (
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
